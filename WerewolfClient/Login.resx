<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAMQOAADEDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAqgAAAKoAAAAKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtoKCgv+CgoL/AAAAtgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAANQAAAAAAAAAAAAAABAAAAPUAAAD/AAAA/wAAAPUAAAAEAAAAAAAA
        AAAAAAA1AAAABAAAAAAAAAABAAAADgAAAH0AAJz/AAAAhoKCguiCgoL/AAAA/wAAAP+CgoL/AAAA6AAA
        AIIAALr7AAAAfQAAAA4AAAABAAAADgAAAMoAAAA1AACc6AAAnP+CgoL/goKC/4KCgv+CgoL/goKC/wAA
        AP8AAKv/AAC66AAAADUAAADKAAAADgAAAAQAAACCAACc/wAAAOiCgoL/goKC/4KCgv+CgoL/goKC/4KC
        gv+CgoL/AADn/wAAAOgAAJz/AAAAggAAAAQAAACmAAAAjwAAAP+CgoL/goKC/4KCgv+CgoL/goKC/4KC
        gv8AAAD/goKC/xUV//8AAOf/AAAA/wAAAI8AAACmAAAAswAAnPwAAAD/goKC/4KCgv+CgoL/goKC/4KC
        gv+CgoL/goKC/4KCgv+CgoL/MzP//wAAAP8AAJz8AAAAswAAALMAAJz/AACr/4KCgv8wMDD/AAAA/4KC
        gv+CgoL/goKC/4KCgv8AAAD/MDAw/4KCgv8AAKv/AACc/wAAALMAAACqAACc/wAAq/+CgoL/ICAg/wAA
        AP+CgoL/goKC/4KCgv+CgoL/AAAA/yAgIP+CgoL/AACr/wAAnP8AAACqAAAACgAAAMoAAJz/goKC/wAA
        AP+CgoL/goKC/4KCgv8AAAD/goKC/4KCgv8AAAD/goKC/wAAnP8AAADKAAAACgAAAAAAAAAOAAAA/wAA
        AP8AALr/AAAA/wAAAP8AAAD/goKC/wAAAP8AAAD/AAC6/wAAAP8AAAD/AAAADgAAAAAAAAAAAAAACgAA
        AMoAAAD/AACc/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAnP8AAAD/AAAAygAAAAoAAAAAAAAAAAAA
        AAAAAAAXCAgI/yAgIP8AAAD/AAAAPwAAAEgAAABIAAAAPwAAAP8gICD/CAgI/wAAABcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAAPwAAAAEAAAAAAAAAAAAAAAEAAAA/AAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABMAAAA9QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAABWAAAAAAAA
        AAAAAAAA//8AAP5/AAD+fwAA7D8AAPAPAADQCwAAwAMAAMADAACAAQAAgAEAAMADAADAAwAA4AcAAOPH
        AADn5wAA/+8AAA==
</value>
  </data>
</root>